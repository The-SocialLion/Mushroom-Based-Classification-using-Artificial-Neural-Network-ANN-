# -*- coding: utf-8 -*-
"""Mush-Class.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tNopl1VK_qn9EHUpyrBD_xCGIkx8miaR
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import secrets

b=list (df['stalk-root'].unique())
b

df=pd.read_csv('mushrooms.csv')
df=df.dropna(how='any')
df['stalk-root']=df['stalk-root'].replace('?',(secrets.choice(b)))
df

from sklearn.preprocessing import LabelEncoder
le1=LabelEncoder()
le2=LabelEncoder()
df['class']=le1.fit_transform(df['class'])
df['cap-shape']=le1.fit_transform(df['cap-shape'])
df['cap-surface']=le1.fit_transform(df['cap-surface'])
df['cap-color']=le1.fit_transform(df['cap-color'])
df['bruises']=le1.fit_transform(df['bruises'])
df['odor']=le1.fit_transform(df['odor'])
df['gill-attachment']=le1.fit_transform(df['gill-attachment'])
df['gill-spacing']=le1.fit_transform(df['gill-spacing'])
df['gill-size']=le1.fit_transform(df['gill-size'])
df['gill-color']=le1.fit_transform(df['gill-color'])
df['stalk-shape']=le1.fit_transform(df['stalk-shape'])
df['stalk-root']=le1.fit_transform(df['stalk-root'])
df['stalk-surface-above-ring']=le1.fit_transform(df['stalk-surface-above-ring'])
df['stalk-surface-below-ring']=le1.fit_transform(df['stalk-surface-below-ring'])
df['stalk-color-above-ring']=le1.fit_transform(df['stalk-color-above-ring'])
df['stalk-color-below-ring']=le1.fit_transform(df['stalk-color-below-ring'])
df['veil-type']=le1.fit_transform(df['veil-type'])
df['veil-color']=le1.fit_transform(df['veil-color'])
df['ring-number']=le1.fit_transform(df['ring-number'])
df['ring-type']=le1.fit_transform(df['ring-type'])
df['spore-print-color']=le1.fit_transform(df['spore-print-color'])
df['population']=le1.fit_transform(df['population'])
df['habitat']=le2.fit_transform(df['habitat'])
df

df['habitat'].unique()

X=df.iloc[:,:-1].values
y=df.iloc[:,-1].values

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)

import tensorflow as tf

y_train = tf.keras.utils.to_categorical(y_train,7)
y_test = tf.keras.utils.to_categorical(y_test,7)

y_test

ann = tf.keras.models.Sequential()
ann.add(tf.keras.layers.Dense(units=30, activation='relu'))
ann.add(tf.keras.layers.Dense(units=30, activation='relu'))
ann.add(tf.keras.layers.Dense(units=7,activation='softmax'))

ann.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])
history=ann.fit(X_train, y_train, batch_size=15, epochs=150)
ann.save("MC.h5")

plt.figure(0)
plt.plot(history.history['accuracy'], label='training accuracy')
plt.title('Accuracy')
plt.xlabel('epochs')
plt.ylabel('accuracy')
plt.legend()
plt.savefig('Accuracy.png')

plt.figure(1)
plt.plot(history.history['loss'], label='training loss')
plt.title('Loss')
plt.xlabel('epochs')
plt.ylabel('loss')
plt.legend()
plt.savefig('Loss.png')
print("Saved Model & Graph to disk")

y_pred = ann.predict(X_test)
y_pred=np.round(y_pred)
np.set_printoptions(precision=2)
print(y)

len(y_pred)

print(y_pred)